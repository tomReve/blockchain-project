{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "enum InsuranceCompanyContract.insurancePolicy",
						"name": "policyType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "validityInDays",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "paymentAddress",
						"type": "address"
					}
				],
				"name": "addCustomer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "customerId",
						"type": "uint256"
					}
				],
				"name": "getCustomer",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "enum InsuranceCompanyContract.insurancePolicy",
								"name": "policyType",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "validityDate",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "paymentAddress",
								"type": "address"
							}
						],
						"internalType": "struct InsuranceCompanyContract.Customer",
						"name": "customer",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "customerId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "newName",
						"type": "string"
					},
					{
						"internalType": "enum InsuranceCompanyContract.insurancePolicy",
						"name": "newInsurancePolicy",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "newValidity",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "newPaymentAddress",
						"type": "address"
					}
				],
				"name": "updateCustomerInformations",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Customer.sol": "CustomerContract"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Customer.sol": {
			"keccak256": "0x1f27def4b9f8d35d56b6d5442db31e573d710ffc73d232b67147c11cbdaf74b4",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://99c560ec1cd72eaeb39d24df05dd0d0ad9c6554f1cfc2ca9e28f1d802b730104",
				"dweb:/ipfs/QmRW7xHHNkqsbMrDmgFkKgNKx1hqrNCGD1ozwwYMtNJNwo"
			]
		},
		"contracts/InsuranceCompany.sol": {
			"keccak256": "0x0dd7c00bdf85b807b7ed401f24d2d4efdf227d4622174d9438653230ad5ac14b",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://a259de5dd00db9f668248ba3df9112f5a9ee23d41d368b6368e80e138e1feb03",
				"dweb:/ipfs/QmcoZzz7XTeK9GbtxkPRYjvZ97jn4HoLhEywzMsLVhPuJe"
			]
		}
	},
	"version": 1
}